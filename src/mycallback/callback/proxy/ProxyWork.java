package mycallback.callback.proxy;

/**
 * Created by Administrator on 2017/12/21.
 *
 * 概念：某项任务要交给对象A完成，C又把A 的任务交给了B去做，A就是被代理者，B就是代理者，C 就是委托人
 *
 * 实现：创建一个代理的主题，代理者和被代理者都继承这个类并且，实现主题
 * 为什么代理类和被代理类都要实现这个？现在有个做作业的任务，抽象出来一个做作业的主题。
 *
 * 场景 ：一天小明的妈妈让小明做作业，首先小明得接受做作业这个任务，所以他继承做作业这个主题，
 * 但是小明想打游戏，作业还必须得完成，他找到一个瞒天过海的方法，让小红去做作业，但是还要伪装成自己的做的，
 * 所以小红也得继承做作业这个主题
 *
 * 效果：小红 和 小明 都是调用同一个做作业名称，小明妈妈傻傻分不清楚，到底是谁做的作业（真正是小红做的，只是小明妈妈不知道），
 * 这就达到了代理的目的
 *
 */

public interface ProxyWork {

    public void doHomeWork();
}
